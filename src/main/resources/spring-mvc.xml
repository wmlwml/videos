<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    1 开启mvc 注解驱动-->
    <mvc:annotation-driven></mvc:annotation-driven>

<!--配置springMVC需要扫描的包-->
    <context:component-scan base-package="com.qf.controller"></context:component-scan>


    <!-- 重要配置！！！ -->
    <mvc:annotation-driven>
        <!--        处理json数据的日期的格式，全局都有效-->
        <!--      new MappingJackson2HttpMessageConverter ->mj->mj.getObjectMapper->  -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"></constructor-arg>
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>

    <!--  url-pattern配置成/后，  使用如下配置将静态资源交给web服务器默认的servlet进行处理 -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>



<!--配置视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UYF-8"/>
        <property name="maxUploadSize" value="500000"/>
    </bean>

<!--    设置静态资源不过滤-->
<!--    <mvc:resources mapping="/js/**" location="/js/"/>-->

    <!-- 拦截器相关配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--           匹配是任意路径下面的所有的资源-->
            <mvc:mapping path="/**"/>
            <!--            js文件下面的所有资源不能拦-->
            <mvc:exclude-mapping path="/js/**"/>
            <mvc:exclude-mapping path="/css/**"/>
            <mvc:exclude-mapping path="/fonts/**"/>
            <mvc:exclude-mapping path="/img/**"/>
            <mvc:exclude-mapping path="/images/**"/>
            <mvc:exclude-mapping path="/layui/**"/>

            <!--            所有的js文件不能拦-->
            <mvc:exclude-mapping path="/**/*.js"/>
            <!--           这个是login.*这个文件不能拦-->
            <mvc:exclude-mapping path="/**/login.*"/>
            <mvc:exclude-mapping path="/before/**"/>
            <mvc:exclude-mapping path="/pageAdmin/login.*" />


            <!--            指定一下自定义的拦截器-->
            <bean class="com.qf.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>